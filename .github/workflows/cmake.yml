name: C/C++ CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install deps
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install -y libunshield-dev libcdio-dev libiso9660-dev
      - run: |
          cmake -S . -B build -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DCMAKE_BUILD_TYPE=${{matrix.build-type}} \
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/prefix
          cmake --build build --config ${{matrix.build-type}} --verbose
          cmake --install ${{github.workspace}}/build --config ${{matrix.build-type}} --verbose
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: install deps
        run: brew install unshield libcdio
      - run: |
          cmake -S . -B build -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DCMAKE_BUILD_TYPE=${{matrix.build-type}} \
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/prefix
          cmake --build build --config ${{matrix.build-type}} --verbose
          cmake --install ${{github.workspace}}/build --config ${{matrix.build-type}} --verbose
      - name: Package
        run: >-
          cpack -C ${{matrix.build-type}}
          --config ${{github.workspace}}/build/CPackConfig.cmake --verbose
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
  # build-win:
  #   permissions:
  #     contents: write
  #   runs-on: windows-latest
  #   steps:
  #     - id: fixed_workspace
  #       name: Fix path (Windows)
  #       run: |
  #         echo out=$("${{github.workspace}}" -Replace "\\","/") |
  #         Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Get Latest Tag
  #       id: latest_tag
  #       uses: WyriHaximus/github-action-get-previous-tag@v1
  #     - name: Configure
  #       run: >-
  #         cmake -B ${{github.workspace}}/build
  #         -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON
  #         --install-prefix ${{github.workspace}}/build/prefix
  #     - name: Build
  #       run: cmake --build ${{github.workspace}}/build --config Release
  #     - name: Install
  #       run: cmake --install ${{github.workspace}}/build --config Release
  #     - name: Package
  #       run: cpack -C Release --config ${{github.workspace}}/build/CPackConfig.cmake
  #     - name: Upload package
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         files: |
  #           ${{steps.fixed_workspace.outputs.out}}/winpbcopy-*.exe
  #           ${{steps.fixed_workspace.outputs.out}}/winpbcopy-*.zip
  #         tag_name: ${{ steps.latest_tag.outputs.tag }}
  build-cross:
    runs-on: ubuntu-latest
    steps:
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build unshield
        run: |
          curl -Lo 'zlib.tar.gz' 'https://zlib.net/zlib-1.3.1.tar.gz'
          tar xf zlib.tar.gz
          cd zlib-1.3.1
          mkdir build
          cmake -B ./build -DCMAKE_BUILD_TYPE=${{matrix.build-type}} \
          -DBUILD_SHARED_LIBS=OFF \
          -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/prefix \
          -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
          -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ -DCMAKE_SYSTEM_NAME=Windows \
          -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=${{matrix.lto}} -Wno-dev
          cmake --build ./build --config ${{matrix.build-type}} --verbose
          cmake --install ./build --config ${{matrix.build-type}} --verbose
          cd ..
          curl -Lo 'unshield.tar.gz' 'https://github.com/twogood/unshield/archive/refs/tags/1.6.2.tar.gz'
          tar xf unshield.tar.gz
          cd unshield-1.6.2
          mkdir build
          cmake -B ./build -DCMAKE_BUILD_TYPE=Debug \
          -DBUILD_STATIC=ON \
          -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=TRUE \
          -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/prefix \
          -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
          -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ -DCMAKE_SYSTEM_NAME=Windows -Wno-dev
          cmake --build ./build --config Debug --verbose
          cmake --install ./build --config Debug --verbose
      - name: Build libcdio
        run: |
          curl -Lo 'libcdio.tar.gz' 'https://github.com/libcdio/libcdio/releases/download/2.2.0/libcdio-2.2.0.tar.gz'
          tar xf libcdio.tar.gz
          cd libcdio-2.2.0
          mkdir build
          ./configure --prefix=${{github.workspace}}/build/prefix \
          --enable-static \
          --disable-shared \
          --host=x86_64-w64-mingw32 --build=x86_64-pc-linux-gnu \
          --without-cd-drive \
          --without-cd-info \
          --without-cdda-player \
          --without-cd-read \
          --without-iso-info \
          --without-iso-read \
          --disable-cxx \
          --disable-cpp-progs \
          --disable-example-progs
          make -j$(nproc)
          make install
          cd ..
      - name: Configure
        run: >-
          cmake -B ${{github.workspace}}/build
          -DBUILD_STATIC=ON
          -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/prefix
          -DCMAKE_PREFIX_PATH=${{github.workspace}}/build/prefix
          -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
          -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc
          -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ -DCMAKE_SYSTEM_NAME=Windows
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}} --verbose
      - name: Install
        run: cmake --install ${{github.workspace}}/build --config ${{matrix.build-type}} --verbose
      - name: Package
        run: >-
          cpack -C ${{matrix.build-type}}
          --config ${{github.workspace}}/build/CPackConfig.cmake --verbose
      - name: Get Latest Tag
        id: latest_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
      - name: Upload package
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{github.workspace}}/re3-installer-*.zip
          tag_name: ${{ steps.latest_tag.outputs.tag }}
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
  build-msys:
    runs-on: windows-latest
    steps:
      - id: fixed_workspace
        name: Fix path
        run: >-
          echo out=$("${{github.workspace}}" -Replace "\\","/") | Out-File
          -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
      - uses: msys2/setup-msys2@v2
        with:
          install: >-
            make
          msystem: ${{matrix.sys.name}}
          pacboy: >-
            cmake:p
            libcdio:p
            ninja:p
            toolchain:p
            zlib:p
          update: true
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build unshield
        run: |
          curl -Lo 'unshield.tar.gz' 'https://github.com/twogood/unshield/archive/refs/tags/1.6.2.tar.gz'
          tar xf unshield.tar.gz
          cd unshield-1.6.2
          mkdir build
          cmake -B ./build -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_INSTALL_PREFIX=${{steps.fixed_workspace.outputs.out}}/build/prefix \
          -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
          -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=TRUE \
          -DCMAKE_SYSTEM_NAME=Windows -Wno-dev
          cmake --build ./build --config Debug --verbose
          cmake --install ./build --config Debug --verbose
        shell: msys2 {0}
      - name: Configure
        run: >-
          cmake -G Ninja -B ${{steps.fixed_workspace.outputs.out}}/build
          --install-prefix ${{steps.fixed_workspace.outputs.out}}/build/prefix
          -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
          -DCMAKE_PREFIX_PATH=${{steps.fixed_workspace.outputs.out}}/build/prefix
        shell: msys2 {0}
      - name: Build
        run: cmake --build ${{steps.fixed_workspace.outputs.out}}/build --verbose
        shell: msys2 {0}
      - name: Install
        run: >-
          cmake --install ${{steps.fixed_workspace.outputs.out}}/build
          --config ${{matrix.build-type}} --verbose
        shell: msys2 {0}
      - name: Package
        run: >-
          cpack -C ${{matrix.build-type}}
          --config ${{steps.fixed_workspace.outputs.out}}/build/CPackConfig.cmake --verbose
        shell: msys2 {0}
      - name: Get Latest Tag
        id: latest_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
      - if: ${{matrix.sys.name == 'mingw32'}}
        name: Upload package
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{github.workspace}}/re3-installer-*.zip
          tag_name: ${{ steps.latest_tag.outputs.tag }}
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
        sys:
          - env: i686
            name: mingw32
          - env: x86_64
            name: mingw64
          - env: ucrt-x86_64
            name: ucrt64
